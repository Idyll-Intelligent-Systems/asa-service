{
  "name": "asa-service",
  "version": "1.0.0",
  "description": "ASA (Ark Survival Ascended) Service API with creature data, taming calculator, and interactive maps",
  "main": "app.js",
  "scripts": {
    "start": "node app.js",
    "dev": "cross-env NODE_ENV=development nodemon app.js",
    "dev:clean": "cross-env DROP_EXISTING_DB=true NODE_ENV=development nodemon app.js",
    "dev:mock": "cross-env SKIP_DATABASE=true NODE_ENV=development nodemon app.js",
    "dev:port": "cross-env NODE_ENV=development PORT=3001 nodemon app.js",
    "prod": "cross-env NODE_ENV=production SKIP_DATABASE=false ENABLE_DATA_SCRAPING=true POPULATE_WITH_REAL_DATA=true node app.js",
    "prod:full": "cross-env NODE_ENV=production SKIP_DATABASE=false DROP_EXISTING_DB=false ENABLE_DATA_SCRAPING=true POPULATE_WITH_REAL_DATA=true ENABLE_DODODEX_SCRAPING=true ENABLE_WIKIDATA_SCRAPING=true ENABLE_WIKILY_SCRAPING=true node app.js",
    "test": "jest --detectOpenHandles",
    "test:unit": "jest tests/unit --detectOpenHandles",
    "test:integration": "jest tests/integration --detectOpenHandles",
    "test:e2e": "jest tests/e2e --detectOpenHandles",
    "test:frontend": "jest tests/integration/frontend-backend.test.js --detectOpenHandles",
    "test:api": "jest tests/integration/api-simple.test.js --detectOpenHandles",
    "test:clean": "jest tests/api-clean.test.js --detectOpenHandles",
    "test:services": "jest tests/services.test.js --detectOpenHandles",
    "test:database": "jest tests/database.test.js --detectOpenHandles",
    "test:quick": "jest tests/unit tests/integration/api-simple.test.js --detectOpenHandles",
    "test:watch": "jest --watch --detectOpenHandles",
    "test:coverage": "jest --coverage --detectOpenHandles",
    "test:verbose": "jest --verbose --detectOpenHandles",
    "build": "npm run lint && npm run test:quick",
    "build:prod": "npm run lint && npm run test && npm run optimize",
    "lint": "echo 'Linting...' && exit 0",
    "lint:fix": "echo 'Linting and fixing...' && exit 0",
    "optimize": "echo 'Optimizing...' && exit 0",
    "setup": "npm install && echo 'Dependencies installed. Run npm run dev to start development server.'",
    "setup:full": "npm install && npm run db:init && echo 'Full setup complete.'",
    "clean": "rimraf node_modules coverage logs/*.log",
    "clean:all": "rimraf node_modules package-lock.json coverage logs/*.log",
    "reset": "npm run clean && npm install",
    "db:init": "node -e \"console.log('Database initialization would run here')\"",
    "db:reset": "node -e \"console.log('Database reset would run here')\"",
    "db:migrate": "node -e \"console.log('Database migration would run here')\"",
    "db:seed": "node -e \"console.log('Database seeding would run here')\"",
    "db:status": "node -e \"console.log('Database status check would run here')\"",
    "health": "curl -f http://localhost:3000/api/health || echo 'Service not running'",
    "logs": "tail -f logs/app.log",
    "logs:error": "grep ERROR logs/app.log",
    "docker:build": "docker build -t asa-service .",
    "docker:run": "docker run -p 3000:3000 asa-service",
    "deploy": "echo 'Deployment would run here'",
    "backup": "echo 'Backup would run here'",
    "restore": "echo 'Restore would run here'"
  },
  "keywords": [
    "ark",
    "survival",
    "ascended",
    "creatures",
    "taming",
    "maps",
    "api",
    "express",
    "nodejs"
  ],
  "author": "Idyll Intelligent Systems",
  "license": "MIT",
  "dependencies": {
    "axios": "^1.4.0",
    "cheerio": "^1.1.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^6.11.2",
    "helmet": "^7.0.0",
    "morgan": "^1.10.0",
    "pg": "^8.11.0",
    "winston": "^3.10.0"
  },
  "devDependencies": {
    "@types/jest": "^29.5.3",
    "cross-env": "^7.0.3",
    "jest": "^29.6.1",
    "nodemon": "^3.0.1",
    "rimraf": "^5.0.1",
    "supertest": "^6.3.3"
  },
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Idyll-Intelligent-Systems/asa-service.git"
  },
  "bugs": {
    "url": "https://github.com/Idyll-Intelligent-Systems/asa-service/issues"
  },
  "homepage": "https://github.com/Idyll-Intelligent-Systems/asa-service#readme"
}
